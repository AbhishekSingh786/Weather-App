[{"C:\\Users\\Abhishek\\Desktop\\New folder\\weather-app\\src\\index.js":"1","C:\\Users\\Abhishek\\Desktop\\New folder\\weather-app\\src\\App.js":"2","C:\\Users\\Abhishek\\Desktop\\New folder\\weather-app\\src\\reportWebVitals.js":"3","C:\\Users\\Abhishek\\Desktop\\New folder\\weather-app\\src\\app_component\\weather.component.jsx":"4","C:\\Users\\Abhishek\\Desktop\\New folder\\weather-app\\src\\app_component\\form.component.jsx":"5"},{"size":500,"mtime":1608890337242,"results":"6","hashOfConfig":"7"},{"size":3183,"mtime":1608901670811,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":848,"mtime":1608902031963,"results":"10","hashOfConfig":"7"},{"size":1282,"mtime":1608903543299,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"54mdy",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Abhishek\\Desktop\\New folder\\weather-app\\src\\index.js",[],["24","25"],"C:\\Users\\Abhishek\\Desktop\\New folder\\weather-app\\src\\App.js",["26"],"import React from 'react'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './app_component/weather.component';\nimport Form from './app_component/form.component';\n\nconst API_key = \"5264f2599e7a48528894d87dd8820645\";\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      city:undefined,\n      country:undefined,\n      icon:undefined,\n      main:undefined,\n      celsius:undefined,\n      temp_max:undefined,\n      temp_min:undefined,\n      description:\"\",\n      error:false\n    };\n\n    this.weatherIcon={\n      Thunderstorm:\"fa-bolt\",\n      Cloud:\"fa-cloud\",\n      Rain:\"fa-cloud-rain\",\n      Heavyrain:\"fa-cloud-showers-heavy\",\n      Cloudsun:\"fa-cloud-sun\",\n      Cloudsunrain:\"fa-cloud-sun-rain\",\n      Smoke:\"fa-smog\",\n      Clear:\"fa-sun\",\n      Snow:\"fa-snowflake\"\n    }\n  }\n\n  calCelsius(temp){\n    let cell = Math.floor(temp-273.15)\n    return cell\n  }\n\n  get_WeatherIcon(icons,rangeId){\n    switch(true){\n      case rangeId >= 200 && rangeId <= 232:\n      this.setState({icon:this.weatherIcon.Thunderstorm});\n      break;\n      case rangeId >= 300 && rangeId <= 321:\n      this.setState({icon:this.weatherIcon.Rain});\n      break;\n      case rangeId >= 500 && rangeId <= 511:\n      this.setState({icon:this.weatherIcon.Cloudsunrain});\n      break;\n      case rangeId >= 520 && rangeId <= 531:\n      this.setState({icon:this.weatherIcon.Heavyrain});\n      break;\n      case rangeId >= 600 && rangeId <= 622:\n      this.setState({icon:this.weatherIcon.Snow});\n      break;\n      case rangeId >= 701 && rangeId <= 781:\n      this.setState({icon:this.weatherIcon.Smoke});\n      break;\n      case rangeId === 800:\n      this.setState({icon:this.weatherIcon.Clear});\n      break;\n      case rangeId >= 801 && rangeId <= 804:\n      this.setState({icon:this.weatherIcon.Cloud});\n      break;\n    }\n  }\n\n  getWeather = async (e) =>{\n\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n\n    const country = e.target.elements.country.value;\n\n    if(city&&country){\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`)\n  \n    const response = await api_call.json();\n\n    console.log(response);\n\n    this.setState({\n      city:`${response.name},${response.sys.country}`,\n      celsius:this.calCelsius(response.main.temp),\n      temp_max:this.calCelsius(response.main.temp_max),\n      temp_min:this.calCelsius(response.main.temp_min),\n      description:response.weather[0].description.toUpperCase(),\n      icon:this.weatherIcon.Thunderstorm\n\n    });\n    this.get_WeatherIcon(this.weatherIcon,response.weather[0].id);\n    }else{\n      this.setState({error:true});\n    }\n  };\n\n  render(){\n    return(\n      <div className=\"App\">\n        <Form loadweather={this.getWeather} error={this.state.error}/>\n        <Weather city={this.state.city}\n        country={this.state.country}\n        temp_celsius={this.state.celsius}\n        temp_max={this.state.temp_max}\n        temp_min={this.state.temp_min}\n        description={this.state.description}\n        weatherIcon={this.state.icon}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","C:\\Users\\Abhishek\\Desktop\\New folder\\weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\Abhishek\\Desktop\\New folder\\weather-app\\src\\app_component\\weather.component.jsx",[],"C:\\Users\\Abhishek\\Desktop\\New folder\\weather-app\\src\\app_component\\form.component.jsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":43,"column":5,"nodeType":"33","messageId":"34","endLine":68,"endColumn":6},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]